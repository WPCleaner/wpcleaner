<?xml version="1.0" encoding="UTF-8"?>
<project name="WikipediaCleaner" default="main" basedir=".">

  <!-- Properties -->
  <property name="WikiCleaner.src.dir"     value="src" />
  <property name="WikiCleaner.build.dir"   value="build" />
  <property name="WikiCleaner.classes.dir" value="${WikiCleaner.build.dir}/classes" />
  <property name="WikiCleaner.dist.dir"    value="${WikiCleaner.build.dir}/dist" />
  <property name="WikiCleaner.jnlp.dir"    value="${WikiCleaner.dist.dir}/jnlp" />
  <property name="WikiCleaner.full.dir"    value="${WikiCleaner.dist.dir}/full" />
  <property name="WikiCleaner.javadoc.dir" value="${WikiCleaner.dist.dir}/javadoc" />
  <property name="WikiCleaner.libs.dir"    value="libs" />
  <property name="WikiCleaner.res.dir"     value="resources" />
  <property name="WikiCleaner.po.dir"      value="${WikiCleaner.src.dir}/org/wikipediacleaner/translation" />

  <property name="WikiCleaner.libs.cobra.dir"      value="libs/cobra-0.98.2" />
  <property name="WikiCleaner.libs.cobra.jar"      value="cobra.jar" />
  <property name="WikiCleaner.libs.cobra-js.jar"   value="js.jar" />
  <property name="WikiCleaner.libs.cobra.lic"      value="LICENSE_cobra.txt" />
  <property name="WikiCleaner.libs.codec.dir"      value="libs/commons-codec-1.3" />
  <property name="WikiCleaner.libs.codec.jar"      value="commons-codec-1.3.jar" />
  <property name="WikiCleaner.libs.codec.lic"      value="LICENSE_commons-codec.txt" />
  <property name="WikiCleaner.libs.httpclient.dir" value="libs/commons-httpclient-3.1" />
  <property name="WikiCleaner.libs.httpclient.jar" value="commons-httpclient-3.1.jar" />
  <property name="WikiCleaner.libs.httpclient.lic" value="LICENSE_commons-httpclient.txt" />
  <property name="WikiCleaner.libs.jaxen-core.jar" value="jaxen-core.jar" />
  <property name="WikiCleaner.libs.jaxen-jdom.jar" value="jaxen-jdom.jar" />
  <property name="WikiCleaner.libs.jaxen.lic"      value="LICENSE_jaxen.txt" />
  <property name="WikiCleaner.libs.jdom.dir"       value="libs/jdom-1.0" />
  <property name="WikiCleaner.libs.jdom.jar"       value="jdom.jar" />
  <property name="WikiCleaner.libs.jdom.lic"       value="LICENSE_jdom.txt" />
  <property name="WikiCleaner.libs.logging.dir"    value="libs/commons-logging-1.1" />
  <property name="WikiCleaner.libs.logging.jar"    value="commons-logging-1.1.jar" />
  <property name="WikiCleaner.libs.logging.lic"    value="LICENSE_commons-logging.txt" />
  <property name="WikiCleaner.libs.saxpath.jar"    value="saxpath.jar" />

  <property name="all.languages" value="cs,da,de,eo,es,fr,he,hu,id,is,it,ja,ko,nb,nl,oc,pl,pt_BR,ru,sv,tr,uk" />

  <!-- NOTE:
       gettext.path can be used if gettext tools are not in the path
       or if Ant can't find them (potential problem on MacOSX + Eclipse)
       Set it by running Ant with -Dgettext.path=<path ending with />

       MacOSX+Eclipse: https://bugs.eclipse.org/bugs/show_bug.cgi?id=111193
  -->
  <property name="gettext.path" value="" />
  <property name="gettext.xgettext" value="${gettext.path}xgettext" />
  <property name="gettext.msgmerge" value="${gettext.path}msgmerge" />
  <property name="gettext.msgfmt"   value="${gettext.path}msgfmt" />

  <!-- Properties that can be useful to change the build -->
  <property name="do.create.pot" value="true" />
  <property name="do.create.po"  value="true" />

  <!-- Paths and FileSets -->
  <path id="WikiCleaner.class.path">
    <fileset dir="${WikiCleaner.libs.dir}">
      <include name="**/*.jar" />
      <exclude name="**/ant-contrib*/*.jar" />
    </fileset>
  </path>
  <fileset id="WikiCleaner.java.files" dir="${basedir}/${WikiCleaner.src.dir}">
    <include name="**/*.java"/>
  </fileset>

  <!-- <for list ...> construct needs ant-contrib.jar -->
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="${WikiCleaner.libs.dir}/ant-contrib-1.0b3/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <!-- Build WikipediaCleaner -->
  <target name="main" description="Build WikipediaCleaner" depends="init,clean,main-i18n,javadoc">

    <!-- Initialize -->
    <input message="Please enter Password for keystore:" addproperty="WikiCleaner.keystore.password" />
    <mkdir dir="${WikiCleaner.build.dir}" />
    <mkdir dir="${WikiCleaner.classes.dir}" />
    <mkdir dir="${WikiCleaner.dist.dir}" />
    <mkdir dir="${WikiCleaner.jnlp.dir}" />
    <mkdir dir="${WikiCleaner.full.dir}" />

    <!-- Java compilation -->
  	<javac srcdir="${WikiCleaner.src.dir}"
           destdir="${WikiCleaner.classes.dir}"
           optimize="on" encoding="UTF-8" target="1.5">
      <classpath refid="WikiCleaner.class.path" />
    </javac>

    <!-- Copy various files for JNLP release -->
    <copy file="${WikiCleaner.res.dir}/.htaccess"
          todir="${WikiCleaner.jnlp.dir}" />
    <copy file="${WikiCleaner.res.dir}/WikiCleaner.jnlp"
          todir="${WikiCleaner.jnlp.dir}" />
    <copy file="${WikiCleaner.libs.cobra.dir}/${WikiCleaner.libs.cobra.lic}"
          tofile="${WikiCleaner.classes.dir}/cobra.license" />
    <copy file="${WikiCleaner.libs.codec.dir}/${WikiCleaner.libs.codec.lic}"
          tofile="${WikiCleaner.classes.dir}/commons-codec.license" />
    <copy file="${WikiCleaner.libs.httpclient.dir}/${WikiCleaner.libs.httpclient.lic}"
          tofile="${WikiCleaner.classes.dir}/commons-httpclient.license" />
    <copy file="${WikiCleaner.libs.logging.dir}/${WikiCleaner.libs.logging.lic}"
  	      tofile="${WikiCleaner.classes.dir}/commons-logging.license" />
    <copy file="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jdom.lic}"
          tofile="${WikiCleaner.classes.dir}/jdom.license" />
    <copy file="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jaxen.lic}"
          tofile="${WikiCleaner.classes.dir}/jaxen.license" />
    <copy file="LICENSE.txt" todir="${WikiCleaner.classes.dir}" />

  	<!-- Copy images -->
    <copy todir="${WikiCleaner.classes.dir}">
      <fileset dir="${WikiCleaner.src.dir}">
        <include name="**/*.png"/>
      </fileset>
    </copy>

    <!-- Create jar for JNLP release -->
    <jar destfile="${WikiCleaner.build.dir}/WikipediaCleanerUnsigned.jar"
         manifest="${WikiCleaner.res.dir}/manifest.txt">
      <fileset dir="${WikiCleaner.classes.dir}">
        <include name="**/*" />
      </fileset>
    </jar>

    <!-- Sign jars for JNLP -->
    <signjar jar="${WikiCleaner.build.dir}/WikipediaCleanerUnsigned.jar"
             signedjar="${WikiCleaner.jnlp.dir}/WikipediaCleaner.jar"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.cobra.dir}/${WikiCleaner.libs.cobra.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.cobra.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.cobra.dir}/${WikiCleaner.libs.cobra-js.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.cobra-js.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.codec.dir}/${WikiCleaner.libs.codec.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.codec.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.httpclient.dir}/${WikiCleaner.libs.httpclient.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.httpclient.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.logging.dir}/${WikiCleaner.libs.logging.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.logging.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jaxen-core.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.jaxen-core.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jaxen-jdom.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.jaxen-jdom.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jdom.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.jdom.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>
    <signjar jar="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.saxpath.jar}"
             signedjar="${WikiCleaner.jnlp.dir}/${WikiCleaner.libs.saxpath.jar}"
             keystore="${WikiCleaner.res.dir}/certificate/WikipediaCleanerKeystore"
             storepass="${WikiCleaner.keystore.password}" alias="WikipediaCleaner">
    </signjar>

    <!-- Extract extra files for full release -->
    <unjar src="${WikiCleaner.libs.cobra.dir}/${WikiCleaner.libs.cobra.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.cobra.dir}/${WikiCleaner.libs.cobra-js.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.codec.dir}/${WikiCleaner.libs.codec.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.httpclient.dir}/${WikiCleaner.libs.httpclient.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.logging.dir}/${WikiCleaner.libs.logging.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jaxen-core.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jaxen-jdom.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.jdom.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <unjar src="${WikiCleaner.libs.jdom.dir}/${WikiCleaner.libs.saxpath.jar}"
           dest="${WikiCleaner.classes.dir}"
           overwrite="false" />
    <delete dir="${WikiCleaner.classes.dir}/META-INF" />

    <!-- Create jar for JNLP release -->
    <jar destfile="${WikiCleaner.full.dir}/WikipediaCleanerFull.jar"
         manifest="${WikiCleaner.res.dir}/manifest.txt">
      <fileset dir="${WikiCleaner.classes.dir}">
        <include name="**/*" />
      </fileset>
    </jar>
  </target>

  <!-- Initialize build -->
  <target name="init">
    <tstamp />
  </target>

  <!-- Clean -->
  <target name="clean">
    <delete dir="${WikiCleaner.build.dir}"/>
  </target>

  <!-- Documentation -->
  <target name="javadoc">
    <mkdir dir="${WikiCleaner.javadoc.dir}" />
    <javadoc destdir="${WikiCleaner.javadoc.dir}"
             sourcepath="${WikiCleaner.src.dir}"
             packagenames="org.wikipediacleaner.*" encoding="UTF-8">
      <classpath refid="WikiCleaner.class.path" />
      <link href="http://java.sun.com/javase/6/docs/api/" />
    </javadoc>
  </target>

  <!-- i18n -->
  <target name="main-i18n"
          depends="init,clean,update-pot,update-po,update-catalog,tar-i18n"/>

  <!-- Manage .pot files -->
  <target name="update-pot" depends="create-pot"/>

  <target name="check-uptodate-pot">
    <condition property="uptodate-pot">
      <uptodate targetfile="${WikiCleaner.po.dir}/tstamp.WikiCleaner.pot_">
        <srcfiles refid="WikiCleaner.java.files"/>
        <srcfiles file="${WikiCleaner.po.dir}/WikiCleaner.pot"/>
      </uptodate>
    </condition>
  </target>

  <target name="create-pot"
          depends="check-executables,check-uptodate-pot"
          if="exist_xgettext" unless="uptodate-pot">
    <if>
      <istrue value="${do.create.pot}" />
      <then>
        <echo message="Generating WikiCleaner.pot (gettext PO-template) file in ${WikiCleaner.po.dir} ..."/>
        <delete file="${WikiCleaner.po.dir}/tstamp.WikiCleaner.pot_"/>
        <!-- generate new WikiCleaner.pot -->
        <mkdir dir="${WikiCleaner.po.dir}/tmp"/>
        <apply executable="${gettext.xgettext}" dir="${basedir}/${WikiCleaner.src.dir}" parallel="true"
               verbose="true" relative="true" forwardslash="true">
          <arg value="-kGT._" />
          <arg value="--from-code=utf-8" />
          <arg value="--language=Java" />
          <arg value="--msgid-bugs-address=nicove@users.sourceforge.net"/>
          <arg value="--output-dir=${basedir}/${WikiCleaner.po.dir}/tmp" />
          <arg value="--output=WikiCleaner.pot" />
          <fileset refid="WikiCleaner.java.files" />
        </apply>
        <if>
          <and>
            <available file="${WikiCleaner.po.dir}/WikiCleaner.pot"/>
            <available file="${WikiCleaner.po.dir}/tmp/WikiCleaner.pot"/>
          </and>
          <then>
            <!-- compare both WikiCleaner.pot files -->
            <copy file="${WikiCleaner.po.dir}/WikiCleaner.pot"
                  tofile="${WikiCleaner.po.dir}/tmp/WikiCleaner.old.pot"/>
            <antcall target="shrink-pot-file">
              <param name="remove_pot_file" value="${WikiCleaner.po.dir}/tmp/WikiCleaner.old.pot"/>
            </antcall>
            <copy file="${WikiCleaner.po.dir}/tmp/WikiCleaner.pot"
                  tofile="${WikiCleaner.po.dir}/tmp/WikiCleaner.new.pot"/>
            <antcall target="shrink-pot-file">
              <param name="remove_pot_file" value="${WikiCleaner.po.dir}/tmp/WikiCleaner.new.pot"/>
            </antcall>
            <if>
              <not>
                <filesmatch file1="${WikiCleaner.po.dir}/tmp/WikiCleaner.old.pot"
                            file2="${WikiCleaner.po.dir}/tmp/WikiCleaner.new.pot"/>
              </not>
              <then>
                <copy file="${WikiCleaner.po.dir}/tmp/WikiCleaner.pot"
                      tofile="${WikiCleaner.po.dir}/WikiCleaner.pot"/>
              </then>
            </if>
          </then>
          <else>
            <if>
              <available file="${WikiCleaner.po.dir}/tmp/WikiCleaner.pot"/>
              <then>
                <copy file="${WikiCleaner.po.dir}/tmp/WikiCleaner.pot"
                      tofile="${WikiCleaner.po.dir}/WikiCleaner.pot"/>
              </then>
            </if>
          </else>
        </if>
        <touch file="${WikiCleaner.po.dir}/tstamp.WikiCleaner.pot_"/>
        <delete dir="${WikiCleaner.po.dir}/tmp"/>
      </then>
      <else>
        <echo message="Skipping generation of WikiCleaner.pot (gettext PO-template)" />
      </else>
    </if>
  </target>

  <!-- Manage .po files -->
  <target name="update-po" depends="create-po"/>

  <target name="create-po" depends="check-executables" if="exist_msgmerge">
    <if>
      <istrue value="${do.create.po}" />
      <then>
        <for list="${all.languages}" delimiter=","
             param="current.language">
          <sequential>
            <antcall target="update-po-lang">
              <param name="WikiCleaner_lang_value" value="@{current.language}"/>
            </antcall>
          </sequential>
        </for>
      </then>
      <else>
        <echo message="Skipping generation of .po gettext files for WikiCleaner" />
      </else>
    </if>
  </target>  

  <target name="check-uptodate-po">
    <condition property="uptodate-po-${WikiCleaner_lang_value}">
      <uptodate targetfile="${WikiCleaner.po.dir}/tstamp.${WikiCleaner_lang_value}.po_">
        <srcfiles file="${WikiCleaner.po.dir}/WikiCleaner.pot"/>
        <srcfiles file="${WikiCleaner.po.dir}/${WikiCleaner_lang_value}.po"/>
      </uptodate>
    </condition>
  </target>

  <target name="update-po-lang"
          depends="check-uptodate-po"
          if="exist_msgmerge" unless="uptodate-po-${WikiCleaner_lang_value}">
    <echo message="Updating wikicleaner-${WikiCleaner_lang_value}.po gettext file for WikiCleaner ..."/>
    <delete file="${WikiCleaner.po.dir}/tstamp.${WikiCleaner_lang_value}.po_"/>
    <exec executable="${gettext.msgmerge}" dir="${basedir}/${WikiCleaner.po.dir}">
      <arg line="-U ${WikiCleaner_lang_value}.po WikiCleaner.pot"/>
    </exec>
    <touch file="${WikiCleaner.po.dir}/tstamp.${WikiCleaner_lang_value}.po_"/>
    <delete file="${WikiCleaner.po.dir}/${WikiCleaner_lang_value}.po~"/>
  </target>

  <!-- Manage catalog files -->
  <target name="update-catalog" depends="create-catalog">
  </target>

  <target name="create-catalog"
          depends="check-executables" if="exist_msgfmt">
    <for list="${all.languages}" delimiter=","
         param="current.language">
      <sequential>
        <antcall target="update-catalog-lang">
          <param name="WikiCleaner_lang_value" value="@{current.language}"/>
        </antcall>
      </sequential>
    </for>
  </target>  

  <target name="check-uptodate-catalog">
    <mkdir dir="${WikiCleaner.classes.dir}/org/wikipediacleaner/i18n"/>
    <condition property="uptodate-catalog-${WikiCleaner_lang_value}">
      <uptodate srcfile="${WikiCleaner.po.dir}/${WikiCleaner_lang_value}.po"
                targetfile="${WikiCleaner.classes.dir}/org/wikipediacleaner/i18n/Messages_${WikiCleaner_lang_value}.class"/>
    </condition>
  </target>

  <target name="update-catalog-lang"
          depends="check-uptodate-catalog"
          if="exist_msgfmt" unless="uptodate-catalog-${WikiCleaner_lang_value}">
    <echo message="Updating messages_${WikiCleaner_lang_value}.class file for Wiki Cleaner ..."/>
    <exec executable="${gettext.msgfmt}" dir="${basedir}/${WikiCleaner.po.dir}">
      <arg value="--statistics"/>
      <arg value="--java2"/>
      <arg value="-l"/>
      <arg value="${WikiCleaner_lang_value}"/>
      <arg value="-d"/>
      <arg value="${basedir}/${WikiCleaner.classes.dir}"/>
      <arg value="-r"/>
      <arg value="org.wikipediacleaner.i18n.Messages"/>
      <arg value="${WikiCleaner_lang_value}.po"/>
    </exec>
  </target>

  <!-- Manage catalog files -->
  <target name="tar-i18n">
    <delete file="${WikiCleaner.po.dir}/WikiCleaner.tgz"/>
    <tar tarfile="${WikiCleaner.po.dir}/WikiCleaner.tgz" compression="gzip">
      <tarfileset dir="${WikiCleaner.po.dir}" includes="**/*.pot,**/*.po"/>
    </tar>
  </target>

  <!-- General i18n targets -->
  <target name="check-executables" unless="exist_executable">

    <!-- checking for xgettext -->
    <exec executable="${gettext.xgettext}" dir="${WikiCleaner.src.dir}"
          failonerror="false" failifexecutionfails="false"
          outputproperty="ouput_xgettext"
          resultproperty="result_xgettext">
      <arg value="--help"/>
    </exec>
    <if>
      <equals arg1="0" arg2="${result_xgettext}"/>
      <then>
        <property name="exist_xgettext" value="true"/>
      </then>
    </if>

    <!-- checking for msgmerge -->
    <exec executable="${gettext.msgmerge}" dir="${WikiCleaner.src.dir}"
          failonerror="false" failifexecutionfails="false"
          outputproperty="ouput_msgmerge"
          resultproperty="result_msgmerge">
      <arg value="--help"/>
    </exec>
    <if>
      <equals arg1="0" arg2="${result_msgmerge}"/>
      <then>
        <property name="exist_msgmerge" value="true"/>
      </then>
    </if>

    <!-- checking for msgfmt -->
    <exec executable="${gettext.msgfmt}" dir="${WikiCleaner.src.dir}"
          failonerror="false" failifexecutionfails="false"
          outputproperty="ouput_msgfmt"
          resultproperty="result_msgfmt">
      <arg value="--help"/>
    </exec>
    <if>
      <equals arg1="0" arg2="${result_msgfmt}"/>
      <then>
        <property name="exist_msgfmt" value="true"/>
      </then>
    </if>

    <!-- global checking -->
    <if>
      <and>
        <equals arg1="${exist_xgettext}" arg2="true"/>
        <equals arg1="${exist_msgmerge}" arg2="true"/>
        <equals arg1="${exist_msgfmt}"   arg2="true"/>
      </and>
      <then>
        <property name="exist_executable" value="true"/>
      </then>
      <else>
        <property name="exist_executable" value="false"/>
        <echo level="warning">
          The gettext tools are not available.
          They are needed if you want to build a version of WikipediaCleaner with translations in other languages.
          Otherwise, you dont need them.
          ----------------------------------------------
          Homepage: http://www.gnu.org/software/gettext/
          Win32: http://gnuwin32.sourceforge.net/packages/gettext.htm
        </echo>
      </else>
    </if>
  </target>

  <target name="shrink-pot-file">
    <!-- Remove "POT-Creation-Date -->
    <replaceregexp file='${remove_pot_file}'
                   match='"POT-Creation-Date:(.*)"'
                   replace='' flags='g'/>
    <!-- Remove source files/lines -->
    <replaceregexp file='${remove_pot_file}'
                   match='#:(.*)'
                   replace='' flags='g'/>
  </target>
</project>
